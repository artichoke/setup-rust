---
name: "Lint and Format Toolchain"
description: "Setup stable and nightly Rust toolchains for running cargo check, cargo clippy, and cargo fmt"

inputs:
  toolchain:
    description: "Rustup toolchain"
    required: true
    default: "stable"

runs:
  using: "composite"
  steps:
    - name: Install ${{ inputs.toolchain }} toolchain
      shell: bash
      run: rustup toolchain install "${{ inputs.toolchain }}" --profile minimal --component clippy --component rustfmt

    - name: Update ${{ inputs.toolchain }} toolchain
      shell: bash
      run: rustup update "${{ inputs.toolchain }}"

    - name: Set default toolchain to ${{ inputs.toolchain }}
      shell: bash
      # https://rust-lang.github.io/rustup/overrides.html
      run: echo 'RUSTUP_TOOLCHAIN=${{ inputs.toolchain }}' >> "$GITHUB_ENV"

    - name: Show rustup version
      shell: bash
      run: rustup -Vv

    - name: Show ${{ inputs.toolchain }} rustc version
      shell: bash
      run: rustc +${{ inputs.toolchain }} -Vv

    - name: Show ${{ inputs.toolchain }} cargo version
      shell: bash
      run: cargo +${{ inputs.toolchain }} version --verbose

    - name: Show ${{ inputs.toolchain }} clippy version
      shell: bash
      run: cargo +${{ inputs.toolchain }} clippy --version --verbose

    - name: Show ${{ inputs.toolchain }} rustfmt version
      shell: bash
      run: cargo +${{ inputs.toolchain }} fmt --version --verbose

    - name: Install nightly toolchain
      shell: bash
      run: rustup toolchain install nightly --profile minimal --component clippy --component rustfmt

    - name: Update nightly toolchain
      shell: bash
      run: rustup update nightly

    - name: Show nightly rustc version
      shell: bash
      run: rustc +nightly -Vv

    - name: Show nightly cargo version
      shell: bash
      run: cargo +nightly version --verbose

    - name: Show nightly clippy version
      shell: bash
      run: cargo +nightly clippy --version --verbose

    - name: Show nightly rustfmt version
      shell: bash
      run: cargo +nightly fmt --version --verbose

    - name: Check if Cargo.lock is present
      shell: bash
      id: lockfile
      run: |
        if [[ -f Cargo.lock ]]; then
          echo "present=true" >> $GITHUB_OUTPUT
        else
          echo "present=false" >> $GITHUB_OUTPUT
        fi

    - name: Setup Rust caching
      uses: Swatinem/rust-cache@6fd3edff6979b79f87531400ad694fb7f2c84b1f # v2.2.1
      if: steps.lockfile.outputs.present == 'true'
